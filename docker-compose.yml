version: '3.8'

services:

  laravel.demo:
    restart: unless-stopped
    container_name: laravel-demo
    build:
        context: .
        dockerfile: docker/php/Dockerfilephp8
        # args:
        #     WWWGROUP: '${WWWGROUP}'
    working_dir: /var/www
    volumes:
        - .:/var/www
        - terminal-history:/root/
        - ./docker/php/www.conf:/usr/local/etc/php-fpm.d/www.conf
        - ./docker/php/uploads.ini:/usr/local/etc/php/conf.d/uploads.ini
  nginx.demo:
    container_name: nginx-demo
    restart: unless-stopped
    image: nginx:latest
    tty: true
    # build:
    #     context: .
    #     dockerfile: docker/nginx/Dockerfile
    depends_on:
        - laravel.demo
    ports:
        # Exposing both http and https
        - 80:80
        - 443:443
    volumes:
        - .:/var/www
        - ./docker/nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf
        # - './docker/nginx/certs:/etc/nginx/certs'
  mysql:
    container_name: mysql-demo
    restart: unless-stopped
    image: mysql
    command: --default-authentication-plugin=mysql_native_password
    ports:
        # So you can use a database client on your host machine
        - 3307:3306
    environment:
        MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
        MYSQL_ROOT_HOST: "%"
        MYSQL_DATABASE: '${DB_DATABASE}'
        MYSQL_USER: '${DB_USERNAME}'
        MYSQL_PASSWORD: '${DB_PASSWORD}'
        MYSQL_ALLOW_EMPTY_PASSWORD: 1
    volumes:
        - sail-mysql:/var/lib/mysql
  phpmyadmin:
    container_name: phpmyadmin-demo
    hostname: phpmyadmin
    image: phpmyadmin/phpmyadmin
    restart: always
    ports:
        - "8081:80"
    environment:
        - PMA_HOSTS=localhost
        - PMA_ARBITRARY=1
  cache:
    container_name: redis-demo
    image: redis:latest
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --loglevel warning
    volumes:
      - cache:/data

volumes:
  terminal-history:
  sail-mysql:
    driver: local
  sail-nginx:
  cache:
    driver: local
